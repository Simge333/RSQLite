``
print("hello")
#lolo
print("hello")
#lolo
print("hello")
library(readxl)
library(readxl)
Sales <- read_excel("Sales.xlsx")
library(readxl)
#Sales <- read_excel("Sales.xlsx")
Games<-read_excel("Games.xlsx")
library(readxl)
#Sales <- read_excel("Sales.xlsx")
Games<-read_excel("Games.xlsx")
library(DBI)
library(DBI)
con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
con;class(con)
library(DBI)
#con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
dbDisconnect(con)
con
library(DBI)
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
veritabani
con
library(DBI)
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
#con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
dbWriteTable(con, "id", Games)
#dbWriteTable(con, "Name", Games)
#dbWriteTable(con, "Name", Sales)
#dbWriteTable(con, "id", Sales)
con
library(DBI)
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
#con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
#dbWriteTable(con, "id", Games)
dbWriteTable(con, "Name", Games)
#dbWriteTable(con, "Name", Sales)
#dbWriteTable(con, "id", Sales)
library(DBI)
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
#con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
#dbWriteTable(con, "id", Games)
#dbWriteTable(con, "Name", Games)
dbWriteTable(con, "Name", Sales)
library(DBI)
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
#con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
#dbWriteTable(con, "id", Games)
#dbWriteTable(con, "Name", Games)
#dbWriteTable(con, "Name", Sales)
dbWriteTable(con, "id", Sales)
library(DBI)
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
#con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
#dbWriteTable(con, "id", Games)
#dbWriteTable(con, "Name", Games)
#dbWriteTable(con, "Name", Sales)
#dbWriteTable(con, "id", Sales)
dbDisconnect(conn)
library(DBI)
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
#con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
#dbWriteTable(con, "id", Games)
#dbWriteTable(con, "Name", Games)
#dbWriteTable(con, "Name", Sales)
#dbWriteTable(con, "id", Sales)
dbDisconnect(con)
con
library(DBI)
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
#con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
dbWriteTable(con, "Games", Games)
library(DBI)
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
#dbWriteTable(con, "Games", Games)
#dbWriteTable(con, "Sales", Sales)
library(DBI)
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
#con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
dbWriteTable(con, "Games", Games)
#dbWriteTable(con, "Sales", Sales)
library(DBI)
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
#con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
#dbWriteTable(con, "Games", Games)
dbWriteTable(con, "Sales", Sales)
con
head(veritabani.db)
library(DBI)
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
#con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
#dbWriteTable(con, "Games", Games)
#dbWriteTable(con, "Sales", Sales)
result <- dbGetQuery(con, "SELECT * FROM Games JOIN Sales ON Game.id = Sales.id")
library(DBI)
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
#con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
#dbWriteTable(con, "Games", Games)
#dbWriteTable(con, "Sales", Sales)
result <- dbGetQuery(con, "SELECT * FROM Games JOIN Sales ON Game.id = Sales.id")
library(DBI)
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
#con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
#dbWriteTable(con, "Games", Games)
#dbWriteTable(con, "Sales", Sales)
result <- dbGetQuery(con, "SELECT * FROM Games JOIN Sales ON Games.id = Sales.id")
head(result)
library(DBI)
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
#con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
#dbWriteTable(con, "Games", Games)
#dbWriteTable(con, "Sales", Sales)
#result <- dbGetQuery(con, "SELECT * FROM Games JOIN Sales ON Games.id = Sales.id")
# SQL sorgusu ile verileri birleştirin ve sonuçları alın
sonuc <- dbGetQuery(con, result)
library(DBI)
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
#con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
#dbWriteTable(con, "Games", Games)
#dbWriteTable(con, "Sales", Sales)
#result <- dbGetQuery(con, "SELECT * FROM Games JOIN Sales ON Games.id = Sales.id")
query <- "
SELECT id FROM Games
UNION
SELECT id FROM Sales "
result1 <- dbGetQuery(con, query)
library(readxl)
#Sales <- read_excel("Sales.xlsx")
#Games<-read_excel("Games.xlsx")
library(readxl)
Sales <- read_excel("Sales.xlsx")
#Games<-read_excel("Games.xlsx")
#Sales <- read_excel("Sales.xlsx")
Games<-read_excel("Games.xlsx")
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
library(DBI)
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
#dbWriteTable(con, "Games", Games)
#dbWriteTable(con, "Sales", Sales)
library(DBI)
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
#dbWriteTable(con, "Games", Games)
#dbWriteTable(con, "Sales", Sales)
library(DBI)
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
#con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
dbWriteTable(con, "Games", Games)
dbWriteTable(con, "Sales", Sales)
library(readxl)
Sales <- read_excel("Sales.xlsx")
Games<-read_excel("Games.xlsx")
library(DBI)
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
#dbWriteTable(con, "Games", Games)
#dbWriteTable(con, "Sales", Sales)
#result <- dbGetQuery(con, "SELECT * FROM Games JOIN Sales ON Games.id = Sales.id")
library(DBI)
##con<-dbConnect(RSQLite::SQLite(), dbname =":memory:")
##dbDisconnect(con)
#con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
dbWriteTable(con, "Games", Games)
dbWriteTable(con, "Sales", Sales)
#result <- dbGetQuery(con, "SELECT * FROM Games JOIN Sales ON Games.id = Sales.id")
result <- dbGetQuery(con, "SELECT * FROM Games INNER JOIN Sales ON Game.id = Sales.id AND Games.Name=Sales.Name")
result <- dbGetQuery(con, "SELECT * FROM Games INNER JOIN Sales ON Games.id = Sales.id AND Games.Name=Sales.Name")
head(result)
install.packages("dplyr")
install.packages("dplyr")
dbDisconnect(con)
library(DBI)
dbDisconnect(con)
library(readxl)
Sales <- read_excel("Sales.xlsx")
Games<-read_excel("Games.xlsx")
library(DBI)
library(RSQLite)
library(dplyr)
library(DBI)
library(RSQLite)
library(dplyr)
library(DBI)
library(RSQLite)
library(dplyr)
library(DBI)
library(RSQLite)
#con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
#dbWriteTable(con, "Games", Games)
#dbWriteTable(con, "Sales", Sales)
library(dplyr)
library(DBI)
library(RSQLite)
library(dplyr)
install.packages("dplyr")
library(DBI)
library(RSQLite)
library(dplyr)
#con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
#dbWriteTable(con, "Games", Games)
#dbWriteTable(con, "Sales", Sales)
library(DBI)
library(RSQLite)
library(dplyr)
con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
#dbWriteTable(con, "Games", Games)
#dbWriteTable(con, "Sales", Sales)
library(DBI)
library(RSQLite)
library(dplyr)
#con<-dbConnect(RSQLite::SQLite(), dbname = "veritabani.db")
dbWriteTable(con, "Games", Games)
dbWriteTable(con, "Sales", Sales)
dataJoined <- inner_join(Games, Sales, by = c("id","Name"))
head(dataJoined)
library(openxlsx)
install.packages("openxlsx")
library(openxlsx)
write.xlsx(dataJoined, "dataJoined.xlsx")
library(dygraphs)
# havaK veri seti ile bir dygraph oluşturma
dygraph(dataJoined, main = "En Çok Satanlar") %>%
dyRangeSelector(dateWindow = c("0", "21"))
library(ggplot2)
install.packages("ggplot2")
```{r}
library(ggplot2)
ggplot(dataJoined, aes(x = Global_Sales)) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "En cok satanlar", x = "Global sales degerleri", y = "Frekans")
ggplot(dataJoined, aes(x = "Global_Sales")) +
geom_histogram(binwidth = 1, fill = "skyblue", color = "black") +
labs(title = "En cok satanlar", x = "Global sales degerleri", y = "Frekans")
# Grafiği görüntüleyelim
print(bar_plot)
bar_plot <- ggplot(data = filtered_data, aes(x = Name, y = Global_Sales)) +
geom_bar(stat = "identity", position="dodge",fill = "pink",colour="green")+
# Grafiğin boyutlarını artırın
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
bar_plot <- ggplot(data = dataJoined, aes(x = Name, y = Global_Sales)) +
geom_bar(stat = "identity", position="dodge",fill = "pink",colour="green")+
# Grafiğin boyutlarını artırın
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
print(bar_plot)
bar_plot <- ggplot(data = top_sales, aes(x = reorder(Name, Global_Sales), y = Global_Sales)) +
geom_bar(stat = "identity", fill = "pink", color = "green") +
labs(title = "En Yüksek Global Satışlar", x = "Oyun Adı", y = "Global Satışlar") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
# Grafiğin boyutlarını artırın
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
top_sales <- dataJoined %>%
arrange(desc(Global_Sales)) %>%
slice(1:10)
bar_plot <- ggplot(data = top_sales, aes(x = reorder(Name, Global_Sales), y = Global_Sales)) +
geom_bar(stat = "identity", fill = "pink", color = "green") +
labs(title = "En Yüksek Global Satışlar", x = "Oyun Adı", y = "Global Satışlar") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
# Grafiğin boyutlarını artırın
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
print(bar_plot)
print(bar_plot)
bar_plot <- ggplot(data = top_sales, aes(x = reorder(Name, Global_Sales), y = Global_Sales)) +
geom_bar(stat = "identity", fill = "pink", color = "black") +
labs(title = "En Yüksek Global Satışlar", x = "Oyun Adı", y = "Global Satışlar") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
# Grafiğin boyutlarını artırın
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
print(bar_plot)
